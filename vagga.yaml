commands:

  run: !Command
    description: Run development server
    container: ubuntu
    prerequisites: [make-wasm]
    run: [cargo, run, "--", --wasm-dir=./target/wasm32-wasi/release]

  make: !Command
    description: Build the library and CLI
    container: ubuntu
    run: [cargo, build]

  cargo: !Command
    description: Run arbitrary cargo command
    symlink-name: cargo
    container: ubuntu
    run: [cargo]

  cargo check: !Command
    description: Run cargo check (includes wasm)
    symlink-name: cargo
    container: ubuntu
    run: |
      set -ex
      cargo check --target=wasm32-wasi --workspace \
        --exclude edgedb-wasm-server
      cargo check

  make-wasm: !Command
    description: Build all example wasm apps
    container: ubuntu
    run: |
      set -ex
      cargo build --release --target=wasm32-wasi --workspace \
        --exclude edgedb-wasm-server

  test: !Command
    description: Run tests
    container: ubuntu
    run: [cargo, test]

containers:

  ubuntu:
    setup:
    - !Ubuntu focal
    - !Install [ca-certificates, git, build-essential, vim]

    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-1.58.0-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr \
                --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"
    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-std-1.58.0-wasm32-wasi.tar.gz"
      script: "./install.sh --prefix=/usr --components=rust-std-wasm32-wasi"

    environ: &environ
      HOME: /work/target
      LANG: en_US.UTF-8
      RUST_BACKTRACE: 1

  tools:
    setup:
    - !Container ubuntu
    - !Sh 'cargo install cargo-fuzz cargo-outdated cargo-bloat --root=/usr'
    environ: *environ
