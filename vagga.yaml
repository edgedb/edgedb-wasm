commands:

  run: !Command
    description: Run development server
    container: ubuntu
    prerequisites: [make-wasm]
    run: [cargo, run, "--", --wasm-dir=./target/wasm32-wasi/release]

  run-unix: !Command
    description: Run development server on unix socket
    container: ubuntu
    prerequisites: [make-wasm]
    environ:
      WASMTIME_BACKTRACE_DETAILS: 1
    run: [cargo, run, "--",
      --unix-socket=./tmp/run/.s.wasm_ext,
    ]

  run-fd: !Command
    description: Run development server on fd/localhost:5757
    container: ubuntu
    prerequisites: [make-wasm]
    pass-tcp-socket: 5657
    environ:
      WASMTIME_BACKTRACE_DETAILS: 1
    run: [cargo, run, "--", --fd=3]

  run-release: !Command
    description: Run release build of a development server
    container: ubuntu
    prerequisites: [make-wasm]
    run: [cargo, run, --release, "--", --wasm-dir=./target/wasm32-wasi/release]

  make: !Command
    description: Build the library and CLI
    container: ubuntu
    run: [cargo, build]

  cargo: !Command
    description: Run arbitrary cargo command
    symlink-name: cargo
    container: ubuntu
    run: [cargo]

  wit-bindgen: !Command
    description: Run wit-bindgen command
    symlink-name: cargo
    container: tools
    run: [wit-bindgen]

  check: !Command
    description: Run cargo check (includes wasm)
    symlink-name: cargo
    container: ubuntu
    run: |
      set -ex
      cargo check --target=wasm32-wasi --workspace \
        --exclude edgedb-wasm-server
      cargo check

  make-wasm: !Command
    description: Build all example wasm apps
    container: ubuntu
    run: |
      set -ex
      cargo build --release --target=wasm32-wasi --workspace \
        --exclude edgedb-wasm-server

  expand: !Command
    description: Run cargo expand
    symlink-name: cargo
    container: nightly
    run: [cargo, expand]

  test: !Command
    description: Run tests
    container: ubuntu
    run: [cargo, test]

  outdated: !Command
    description: Run cargo outdated
    symlink-name: cargo
    container: tools
    run: [cargo, outdated]

  wrk: !Command
    description: Run wrk HTTP benchmarking tool
    container: wrk
    run: [wrk]

  edgedb: !Command
    description: Run edgedb CLI
    container: ubuntu
    run: [edgedb]

containers:

  ubuntu:
    setup:
    - !Ubuntu focal
    - !Install [ca-certificates, git, build-essential, vim]

    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-1.58.0-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr \
                --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"
    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-std-1.58.0-wasm32-wasi.tar.gz"
      script: "./install.sh --prefix=/usr --components=rust-std-wasm32-wasi"
    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-std-1.58.0-wasm32-unknown-unknown.tar.gz"
      script: "./install.sh --prefix=/usr --components=rust-std-wasm32-unknown-unknown"
    - !TarInstall
      url: "https://static.rust-lang.org/dist/rustfmt-1.57.0-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr"
    - !Download
      url: https://packages.edgedb.com/dist/linux-x86_64/edgedb-cli_latest
      path: /usr/bin/edgedb
      mode: 0o755
    environ: &environ
      HOME: /work/target
      LANG: en_US.UTF-8
      RUST_BACKTRACE: 1

  tools:
    setup:
    - !Container ubuntu
    - !Install [libssl-dev, pkg-config]
    - !Sh 'cargo install cargo-outdated --root=/usr'
    - !Sh "cargo install --root=/usr --git https://github.com/bytecodealliance/wit-bindgen wit-bindgen-cli wasmlink-cli"
    environ: *environ

  nightly:
    setup:
    - !Ubuntu focal
    - !Install [ca-certificates, git, build-essential, vim]

    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-nightly-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr \
                --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"
    - !Sh 'cargo install cargo-expand --root=/usr'

    environ:
      HOME: /work/target
      RUST_BACKTRACE: 1

  wrk:
    setup:
    - !Alpine v3.14
    - !Repo community
    - !Install [wrk]
